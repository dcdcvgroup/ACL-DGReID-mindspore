# 1.This file shows the parsed IR info when graph evaluating failed to help find the problem.
# 2.You can search the last `------------------------>` to the node which is inferred failed.
# 3.Refer to https://www.mindspore.cn/search?inputValue=analyze_fail.ir to get more instructions.
# ===============================================================================

subgraph attr:
training : 0
subgraph instance: fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7 : 0x558afbe451e0
# In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:457/    def construct(self, x, epoch, opt=None):/
subgraph @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7(%para1_x, %para2_epoch, %para3_NL_1_idx, %para4_conv1.weight, %para5_router1.fc_classifier.weight, %para6_router1.fc2.weight, %para7_router1.fc1.weight, %para8_router2.fc_classifier.weight, %para9_meta_fuse1.gate, %para10_router2.fc2.weight, %para11_router2.fc1.weight, %para12_meta_se1.fc2.weight, %para13_router3.fc_classifier.weight, %para14_meta_fuse2.gate, %para15_bn1.gamma, %para16_bn1.beta, %para17_bn1.moving_mean, %para18_bn1.moving_variance, %para19_meta_se1.fc1.weight, %para20_router3.fc2.weight, %para21_meta_fuse4.gate, %para22_router4.fc_classifier.weight, %para23_meta_fuse3.gate, %para24_router3.fc1.weight, %para25_meta_se2.fc2.weight, %para26_layer1.0.conv3.weight, %para27_layer1.1.conv3.weight, %para28_invariant_norm1.gamma, %para29_invariant_norm1.beta, %para30_invariant_norm1.moving_mean, %para31_invariant_norm1.moving_variance, %para32_specific_norm1.gamma, %para33_specific_norm1.beta, %para34_specific_norm1.moving_mean, %para35_specific_norm1.moving_variance, %para36_meta_se2.fc1.weight, %para37_adaptor1_base.conv3.weight, %para38_adaptor1_sub.conv3.weight, %para39_router4.fc2.weight, %para40_layer1.0.conv2.weight, %para41_layer1.1.conv2.weight, %para42_adaptor2_sub.conv3.weight, %para43_adaptor3_sub.conv3.weight, %para44_adaptor4_sub.conv3.weight, %para45_meta_se4.fc2.weight, %para46_adaptor1_base.conv2.weight, %para47_adaptor1_sub.conv2.weight, %para48_router4.fc1.weight, %para49_meta_se3.fc2.weight, %para50_layer1.0.conv1.weight, %para51_layer1.1.conv1.weight, %para52_meta_se4.fc1.weight, %para53_adaptor2_sub.conv2.weight, %para54_adaptor3_sub.conv2.weight, %para55_meta_se3.fc1.weight, %para56_adaptor4_sub.conv2.weight, %para57_layer2.0.conv3.weight, %para58_layer2.1.conv3.weight, %para59_layer2.2.conv3.weight, %para60_adaptor1_base.conv1.weight, %para61_adaptor1_sub.conv1.weight, %para62_invariant_norm2.gamma, %para63_invariant_norm2.beta, %para64_invariant_norm2.moving_mean, %para65_invariant_norm2.moving_variance, %para66_specific_norm2.gamma, %para67_specific_norm2.beta, %para68_specific_norm2.moving_mean, %para69_specific_norm2.moving_variance, %para70_adaptor2_base.conv3.weight, %para71_adaptor2_sub.conv1.weight, %para72_adaptor3_sub.conv1.weight, %para73_adaptor3_base.conv3.weight, %para74_adaptor4_sub.conv1.weight, %para75_adaptor4_base.conv3.weight, %para76_layer2.0.conv2.weight, %para77_layer2.1.conv2.weight, %para78_layer2.2.conv2.weight, %para79_adaptor2_base.conv2.weight, %para80_adaptor3_base.conv2.weight, %para81_adaptor4_base.conv2.weight, %para82_invariant_norm4.gamma, %para83_invariant_norm4.beta, %para84_invariant_norm4.moving_mean, %para85_invariant_norm4.moving_variance, %para86_specific_norm4.gamma, %para87_specific_norm4.beta, %para88_specific_norm4.moving_mean, %para89_specific_norm4.moving_variance, %para90_layer2.0.conv1.weight, %para91_layer2.1.conv1.weight, %para92_layer2.2.conv1.weight, %para93_invariant_norm3.gamma, %para94_invariant_norm3.beta, %para95_invariant_norm3.moving_mean, %para96_invariant_norm3.moving_variance, %para97_specific_norm3.gamma, %para98_specific_norm3.beta, %para99_specific_norm3.moving_mean, %para100_specific_norm3.moving_variance, %para101_layer1.0.bn3.gamma, %para102_layer1.0.bn3.beta, %para103_layer1.0.bn3.moving_mean, %para104_layer1.0.bn3.moving_variance, %para105_layer1.1.bn3.gamma, %para106_layer1.1.bn3.beta, %para107_layer1.1.bn3.moving_mean, %para108_layer1.1.bn3.moving_variance, %para109_map4.gamma, %para110_map4.beta, %para111_map4.moving_mean, %para112_map4.moving_variance, %para113_adaptor1_base.bn3.moving_mean, %para114_adaptor1_base.bn3.moving_variance, %para115_layer3.0.conv3.weight, %para116_layer3.1.conv3.weight, %para117_layer3.2.conv3.weight, %para118_layer3.3.conv3.weight, %para119_layer3.4.conv3.weight, %para120_adaptor2_base.conv1.weight, %para121_adaptor1_sub.bn3.gamma, %para122_adaptor1_sub.bn3.beta, %para123_adaptor1_sub.bn3.moving_mean, %para124_adaptor1_sub.bn3.moving_variance, %para125_adaptor3_base.conv1.weight, %para126_adaptor4_base.conv1.weight, %para127_map3.gamma, %para128_map3.beta, %para129_map3.moving_mean, %para130_map3.moving_variance, %para131_adaptor1_base.bn3.gamma, %para132_adaptor1_base.bn3.beta, %para133_layer1.0.bn2.gamma, %para134_layer1.0.bn2.beta, %para135_layer1.0.bn2.moving_mean, %para136_layer1.0.bn2.moving_variance, %para137_layer1.1.bn2.gamma, %para138_layer1.1.bn2.beta, %para139_layer1.1.bn2.moving_mean, %para140_layer1.1.bn2.moving_variance, %para141_adaptor1_base.bn2.moving_mean, %para142_adaptor1_base.bn2.moving_variance, %para143_adaptor2_sub.bn3.gamma, %para144_adaptor2_sub.bn3.beta, %para145_adaptor2_sub.bn3.moving_mean, %para146_adaptor2_sub.bn3.moving_variance, %para147_adaptor3_sub.bn3.gamma, %para148_adaptor3_sub.bn3.beta, %para149_adaptor3_sub.bn3.moving_mean, %para150_adaptor3_sub.bn3.moving_variance, %para151_adaptor4_sub.bn3.gamma, %para152_adaptor4_sub.bn3.beta, %para153_adaptor4_sub.bn3.moving_mean, %para154_adaptor4_sub.bn3.moving_variance, %para155_map2.gamma, %para156_map2.beta, %para157_map2.moving_mean, %para158_map2.moving_variance, %para159_layer3.0.conv2.weight, %para160_layer3.1.conv2.weight, %para161_layer3.2.conv2.weight, %para162_layer3.3.conv2.weight, %para163_layer3.4.conv2.weight, %para164_adaptor1_sub.bn2.gamma, %para165_adaptor1_sub.bn2.beta, %para166_adaptor1_sub.bn2.moving_mean, %para167_adaptor1_sub.bn2.moving_variance, %para168_adaptor1_base.bn2.gamma, %para169_adaptor1_base.bn2.beta, %para170_map1.gamma, %para171_map1.beta, %para172_map1.moving_mean, %para173_map1.moving_variance, %para174_adaptor1_base.bn1.moving_mean, %para175_adaptor1_base.bn1.moving_variance, %para176_adaptor2_sub.bn2.gamma, %para177_adaptor2_sub.bn2.beta, %para178_adaptor2_sub.bn2.moving_mean, %para179_adaptor2_sub.bn2.moving_variance, %para180_adaptor3_sub.bn2.gamma, %para181_adaptor3_sub.bn2.beta, %para182_adaptor3_sub.bn2.moving_mean, %para183_adaptor3_sub.bn2.moving_variance, %para184_layer4.0.conv3.weight, %para185_layer4.1.conv3.weight, %para186_adaptor4_sub.bn2.gamma, %para187_adaptor4_sub.bn2.beta, %para188_adaptor4_sub.bn2.moving_mean, %para189_adaptor4_sub.bn2.moving_variance, %para190_layer3.0.conv1.weight, %para191_layer3.1.conv1.weight, %para192_layer3.2.conv1.weight, %para193_layer3.3.conv1.weight, %para194_layer3.4.conv1.weight, %para195_layer2.0.bn3.gamma, %para196_layer2.0.bn3.beta, %para197_layer2.0.bn3.moving_mean, %para198_layer2.0.bn3.moving_variance, %para199_layer2.1.bn3.gamma, %para200_layer2.1.bn3.beta, %para201_layer2.1.bn3.moving_mean, %para202_layer2.1.bn3.moving_variance, %para203_layer2.2.bn3.gamma, %para204_layer2.2.bn3.beta, %para205_layer2.2.bn3.moving_mean, %para206_layer2.2.bn3.moving_variance, %para207_adaptor2_base.bn3.moving_mean, %para208_adaptor2_base.bn3.moving_variance, %para209_adaptor1_base.bn1.gamma, %para210_adaptor1_base.bn1.beta, %para211_adaptor3_base.bn3.moving_mean, %para212_adaptor3_base.bn3.moving_variance, %para213_adaptor4_base.bn3.moving_mean, %para214_adaptor4_base.bn3.moving_variance, %para215_layer4.0.conv2.weight, %para216_layer4.1.conv2.weight, %para217_adaptor2_base.bn3.gamma, %para218_adaptor2_base.bn3.beta, %para219_layer2.0.bn2.gamma, %para220_layer2.0.bn2.beta, %para221_layer2.0.bn2.moving_mean, %para222_layer2.0.bn2.moving_variance, %para223_layer2.1.bn2.gamma, %para224_layer2.1.bn2.beta, %para225_layer2.1.bn2.moving_mean, %para226_layer2.1.bn2.moving_variance, %para227_layer2.2.bn2.gamma, %para228_layer2.2.bn2.beta, %para229_layer2.2.bn2.moving_mean, %para230_layer2.2.bn2.moving_variance, %para231_adaptor3_base.bn3.gamma, %para232_adaptor3_base.bn3.beta, %para233_adaptor4_base.bn3.gamma, %para234_adaptor4_base.bn3.beta, %para235_adaptor2_base.bn2.moving_mean, %para236_adaptor2_base.bn2.moving_variance, %para237_adaptor3_base.bn2.moving_mean, %para238_adaptor3_base.bn2.moving_variance, %para239_adaptor4_base.bn2.moving_mean, %para240_adaptor4_base.bn2.moving_variance, %para241_layer4.0.conv1.weight, %para242_layer4.1.conv1.weight, %para243_adaptor2_base.bn2.gamma, %para244_adaptor2_base.bn2.beta, %para245_adaptor3_base.bn2.gamma, %para246_adaptor3_base.bn2.beta, %para247_adaptor4_base.bn2.gamma, %para248_adaptor4_base.bn2.beta, %para249_adaptor2_base.bn1.moving_mean, %para250_adaptor2_base.bn1.moving_variance, %para251_adaptor3_base.bn1.moving_mean, %para252_adaptor3_base.bn1.moving_variance, %para253_adaptor4_base.bn1.moving_mean, %para254_adaptor4_base.bn1.moving_variance, %para255_layer3.0.bn3.gamma, %para256_layer3.0.bn3.beta, %para257_layer3.0.bn3.moving_mean, %para258_layer3.0.bn3.moving_variance, %para259_layer3.1.bn3.gamma, %para260_layer3.1.bn3.beta, %para261_layer3.1.bn3.moving_mean, %para262_layer3.1.bn3.moving_variance, %para263_layer3.2.bn3.gamma, %para264_layer3.2.bn3.beta, %para265_layer3.2.bn3.moving_mean, %para266_layer3.2.bn3.moving_variance, %para267_layer3.3.bn3.gamma, %para268_layer3.3.bn3.beta, %para269_layer3.3.bn3.moving_mean, %para270_layer3.3.bn3.moving_variance, %para271_layer3.4.bn3.gamma, %para272_layer3.4.bn3.beta, %para273_layer3.4.bn3.moving_mean, %para274_layer3.4.bn3.moving_variance, %para275_adaptor2_base.bn1.gamma, %para276_adaptor2_base.bn1.beta, %para277_adaptor3_base.bn1.gamma, %para278_adaptor3_base.bn1.beta, %para279_adaptor4_base.bn1.gamma, %para280_adaptor4_base.bn1.beta, %para281_layer1.0.bn1.IN.moving_mean, %para282_layer1.0.bn1.IN.moving_variance, %para283_layer1.1.bn1.IN.moving_mean, %para284_layer1.1.bn1.IN.moving_variance, %para285_layer1.0.bn1.BN.gamma, %para286_layer1.0.bn1.BN.beta, %para287_layer1.0.bn1.BN.moving_mean, %para288_layer1.0.bn1.BN.moving_variance, %para289_layer1.1.bn1.BN.gamma, %para290_layer1.1.bn1.BN.beta, %para291_layer1.1.bn1.BN.moving_mean, %para292_layer1.1.bn1.BN.moving_variance, %para293_layer3.0.bn2.gamma, %para294_layer3.0.bn2.beta, %para295_layer3.0.bn2.moving_mean, %para296_layer3.0.bn2.moving_variance, %para297_layer3.1.bn2.gamma, %para298_layer3.1.bn2.beta, %para299_layer3.1.bn2.moving_mean, %para300_layer3.1.bn2.moving_variance, %para301_layer3.2.bn2.gamma, %para302_layer3.2.bn2.beta, %para303_layer3.2.bn2.moving_mean, %para304_layer3.2.bn2.moving_variance, %para305_layer3.3.bn2.gamma, %para306_layer3.3.bn2.beta, %para307_layer3.3.bn2.moving_mean, %para308_layer3.3.bn2.moving_variance, %para309_layer3.4.bn2.gamma, %para310_layer3.4.bn2.beta, %para311_layer3.4.bn2.moving_mean, %para312_layer3.4.bn2.moving_variance, %para313_adaptor1_sub.bn1.IN.moving_mean, %para314_adaptor1_sub.bn1.IN.moving_variance, %para315_layer1.0.bn1.IN.gamma, %para316_layer1.0.bn1.IN.beta, %para317_layer1.1.bn1.IN.gamma, %para318_layer1.1.bn1.IN.beta, %para319_adaptor1_sub.bn1.BN.gamma, %para320_adaptor1_sub.bn1.BN.beta, %para321_adaptor1_sub.bn1.BN.moving_mean, %para322_adaptor1_sub.bn1.BN.moving_variance, %para323_adaptor1_sub.bn1.IN.gamma, %para324_adaptor1_sub.bn1.IN.beta, %para325_adaptor2_sub.bn1.IN.moving_mean, %para326_adaptor2_sub.bn1.IN.moving_variance, %para327_adaptor3_sub.bn1.IN.moving_mean, %para328_adaptor3_sub.bn1.IN.moving_variance, %para329_layer4.0.bn3.gamma, %para330_layer4.0.bn3.beta, %para331_layer4.0.bn3.moving_mean, %para332_layer4.0.bn3.moving_variance, %para333_layer4.1.bn3.gamma, %para334_layer4.1.bn3.beta, %para335_layer4.1.bn3.moving_mean, %para336_layer4.1.bn3.moving_variance, %para337_adaptor4_sub.bn1.IN.moving_mean, %para338_adaptor4_sub.bn1.IN.moving_variance, %para339_adaptor2_sub.bn1.BN.gamma, %para340_adaptor2_sub.bn1.BN.beta, %para341_adaptor2_sub.bn1.BN.moving_mean, %para342_adaptor2_sub.bn1.BN.moving_variance, %para343_adaptor3_sub.bn1.BN.gamma, %para344_adaptor3_sub.bn1.BN.beta, %para345_adaptor3_sub.bn1.BN.moving_mean, %para346_adaptor3_sub.bn1.BN.moving_variance, %para347_adaptor4_sub.bn1.BN.gamma, %para348_adaptor4_sub.bn1.BN.beta, %para349_adaptor4_sub.bn1.BN.moving_mean, %para350_adaptor4_sub.bn1.BN.moving_variance, %para351_adaptor2_sub.bn1.IN.gamma, %para352_adaptor2_sub.bn1.IN.beta, %para353_adaptor3_sub.bn1.IN.gamma, %para354_adaptor3_sub.bn1.IN.beta, %para355_adaptor4_sub.bn1.IN.gamma, %para356_adaptor4_sub.bn1.IN.beta, %para357_layer4.0.bn2.gamma, %para358_layer4.0.bn2.beta, %para359_layer4.0.bn2.moving_mean, %para360_layer4.0.bn2.moving_variance, %para361_layer4.1.bn2.gamma, %para362_layer4.1.bn2.beta, %para363_layer4.1.bn2.moving_mean, %para364_layer4.1.bn2.moving_variance, %para365_layer2.0.bn1.IN.moving_mean, %para366_layer2.0.bn1.IN.moving_variance, %para367_layer2.1.bn1.IN.moving_mean, %para368_layer2.1.bn1.IN.moving_variance, %para369_layer2.2.bn1.IN.moving_mean, %para370_layer2.2.bn1.IN.moving_variance, %para371_layer2.0.bn1.BN.gamma, %para372_layer2.0.bn1.BN.beta, %para373_layer2.0.bn1.BN.moving_mean, %para374_layer2.0.bn1.BN.moving_variance, %para375_layer2.1.bn1.BN.gamma, %para376_layer2.1.bn1.BN.beta, %para377_layer2.1.bn1.BN.moving_mean, %para378_layer2.1.bn1.BN.moving_variance, %para379_layer2.2.bn1.BN.gamma, %para380_layer2.2.bn1.BN.beta, %para381_layer2.2.bn1.BN.moving_mean, %para382_layer2.2.bn1.BN.moving_variance, %para383_layer2.0.bn1.IN.gamma, %para384_layer2.0.bn1.IN.beta, %para385_layer2.1.bn1.IN.gamma, %para386_layer2.1.bn1.IN.beta, %para387_layer2.2.bn1.IN.gamma, %para388_layer2.2.bn1.IN.beta, %para389_layer4.0.bn1.gamma, %para390_layer4.0.bn1.beta, %para391_layer4.0.bn1.moving_mean, %para392_layer4.0.bn1.moving_variance, %para393_layer4.1.bn1.gamma, %para394_layer4.1.bn1.beta, %para395_layer4.1.bn1.moving_mean, %para396_layer4.1.bn1.moving_variance, %para397_layer3.0.bn1.IN.moving_mean, %para398_layer3.0.bn1.IN.moving_variance, %para399_layer3.1.bn1.IN.moving_mean, %para400_layer3.1.bn1.IN.moving_variance, %para401_layer3.2.bn1.IN.moving_mean, %para402_layer3.2.bn1.IN.moving_variance, %para403_layer3.3.bn1.IN.moving_mean, %para404_layer3.3.bn1.IN.moving_variance, %para405_layer3.4.bn1.IN.moving_mean, %para406_layer3.4.bn1.IN.moving_variance, %para407_layer3.0.bn1.BN.gamma, %para408_layer3.0.bn1.BN.beta, %para409_layer3.0.bn1.BN.moving_mean, %para410_layer3.0.bn1.BN.moving_variance, %para411_layer3.1.bn1.BN.gamma, %para412_layer3.1.bn1.BN.beta, %para413_layer3.1.bn1.BN.moving_mean, %para414_layer3.1.bn1.BN.moving_variance, %para415_layer3.2.bn1.BN.gamma, %para416_layer3.2.bn1.BN.beta, %para417_layer3.2.bn1.BN.moving_mean, %para418_layer3.2.bn1.BN.moving_variance, %para419_layer3.3.bn1.BN.gamma, %para420_layer3.3.bn1.BN.beta, %para421_layer3.3.bn1.BN.moving_mean, %para422_layer3.3.bn1.BN.moving_variance, %para423_layer3.4.bn1.BN.gamma, %para424_layer3.4.bn1.BN.beta, %para425_layer3.4.bn1.BN.moving_mean, %para426_layer3.4.bn1.BN.moving_variance, %para427_layer3.0.bn1.IN.gamma, %para428_layer3.0.bn1.IN.beta, %para429_layer3.1.bn1.IN.gamma, %para430_layer3.1.bn1.IN.beta, %para431_layer3.2.bn1.IN.gamma, %para432_layer3.2.bn1.IN.beta, %para433_layer3.3.bn1.IN.gamma, %para434_layer3.3.bn1.IN.beta, %para435_layer3.4.bn1.IN.gamma, %para436_layer3.4.bn1.IN.beta) {
  %1([CNode]12) = call @print_.11(I64(4))
      : (<Int64, NoShape>) -> (<Tensor[Int32], (1)>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:461/        print(4)/
  %2([CNode]13) = getattr(%para1_x, "ndim")
      : (<Tensor[Float32], (8, 3, 16, 16)>, <String, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:463/        print("ndim", x.ndim)/
  %3([CNode]14) = call @print_.11("ndim", %2)
      : (<String, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (1)>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:463/        print("ndim", x.ndim)/
  %4(x) = call @fastreid_modeling_ops_MetaConv2d_construct.15(%para1_x)
      : (<Tensor[Float32], (8, 3, 16, 16)>) -> (<Tensor[Float32], (8, 64, 8, 8)>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:464/        x = self.conv1(x)/
  %5([CNode]16) = getattr(%4, "ndim")
      : (<Tensor[Float32], (8, 64, 8, 8)>, <String, NoShape>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:465/        print("x.dim", x.ndim)/
  %6([CNode]17) = call @print_.11("x.dim", %5)
      : (<String, NoShape>, <Int64, NoShape>) -> (<Tensor[Int32], (1)>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:465/        print("x.dim", x.ndim)/
  %7([CNode]18) = MakeTuple(%1, %3, %6)
      : (<Tensor[Int32], (1)>, <Tensor[Int32], (1)>, <Tensor[Int32], (1)>) -> (<Tuple[Tensor[Int32]*3], TupleShape((1), (1), (1))>)
      #scope: (Default)
  %8([CNode]19) = StopGradient(%7)
      : (<Tuple[Tensor[Int32]*3], TupleShape((1), (1), (1))>) -> (<Tuple[Tensor[Int32]*3], TupleShape((1), (1), (1))>)
      #scope: (Default)
  %9([CNode]20) = S-Prim-inner_len(%para3_NL_1_idx)
      : (<Ref[Tensor[Int64]], (1)>) -> (<Int64, NoShape>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
  %10([CNode]21) = S-Prim-equal(%9, I64(0))
      : (<Int64, NoShape>, <Int64, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
  %11([CNode]22) = Cond(%10, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
  %12([CNode]23) = Switch(%11, call @✓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.24, call @✗fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.8)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/

#------------------------> 0
  %13([CNode]25) = %12()
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
  %14([CNode]26) = Depend[side_effect_propagate: I64(1)](%13, %8)
      : (<null>, <Tuple[Tensor[Int32]*3], TupleShape((1), (1), (1))>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
  Return(%14)
      : (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
}
# Order:
#   1: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]12{[0]: ValueNode<FuncGraph> print_.11, [1]: ValueNode<Int64Imm> 4}
#   2: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]13{[0]: ValueNode<Primitive> getattr, [1]: x, [2]: ValueNode<StringImm> ndim}
#   3: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]14{[0]: ValueNode<FuncGraph> print_.11, [1]: ValueNode<StringImm> ndim, [2]: [CNode]13}
#   4: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:x{[0]: ValueNode<FuncGraph> fastreid_modeling_ops_MetaConv2d_construct.15, [1]: x}
#   5: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]16{[0]: ValueNode<Primitive> getattr, [1]: x, [2]: ValueNode<StringImm> ndim}
#   6: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]17{[0]: ValueNode<FuncGraph> print_.11, [1]: ValueNode<StringImm> x.dim, [2]: [CNode]16}
#   7: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:x{[0]: ValueNode<FuncGraph> fastreid_modeling_ops_MetaBNNorm_construct.10, [1]: x}
#   8: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:x{[0]: ValueNode<FuncGraph> mindspore_nn_layer_activation_ReLU_construct.27, [1]: x}
#   9: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:x{[0]: ValueNode<FuncGraph> mindspore_nn_layer_pooling_MaxPool2d_construct.28, [1]: x}
#  10: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]20{[0]: ValueNode<DoSignaturePrimitive> S-Prim-inner_len, [1]: NL_1_idx}
#  11: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]21{[0]: ValueNode<DoSignaturePrimitive> S-Prim-equal, [1]: [CNode]20, [2]: ValueNode<Int64Imm> 0}
#  12: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]22{[0]: ValueNode<Primitive> Cond, [1]: [CNode]21, [2]: ValueNode<BoolImm> false}
#  13: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]23{[0]: ValueNode<Primitive> Switch, [1]: [CNode]22, [2]: ValueNode<FuncGraph> ✓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.24, [3]: ValueNode<FuncGraph> ✗fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.8}
#  14: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]25{[0]: [CNode]23}
#  15: @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7:[CNode]29{[0]: ValueNode<Primitive> Return, [1]: [CNode]26}


subgraph attr:
training : 0
subgraph instance: ✗fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.8 : 0x558adf49bbb0
# In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
subgraph @✗fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.8 parent: [subgraph @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7]() {

#------------------------> 1
  %1([CNode]30) = call @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9()
      #scope: (Default)
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
}
# Order:
#   1: @✗fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.8:[CNode]31{[0]: ValueNode<Primitive> Return, [1]: [CNode]30}
#   2: @✗fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.8:[CNode]30{[0]: ValueNode<FuncGraph> ↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9}


subgraph attr:
after_block : 1
training : 0
subgraph instance: ↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9 : 0x558adf49a100
# In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:475/        if len(self.NL_1_idx) == 0:/
subgraph @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9 parent: [subgraph @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7]() {
  %1(x) = $(fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7):call @fastreid_modeling_ops_MetaConv2d_construct.15(%para1_x)
      : (<Tensor[Float32], (8, 3, 16, 16)>) -> (<Tensor[Float32], (8, 64, 8, 8)>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:464/        x = self.conv1(x)/

#------------------------> 2
  %2(x) = $(fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7):call @fastreid_modeling_ops_MetaBNNorm_construct.10(%1)
      : (<Tensor[Float32], (8, 64, 8, 8)>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:466/        x = self.bn1(x)/
  %3(x) = $(fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7):call @mindspore_nn_layer_activation_ReLU_construct.27(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:467/        x = self.relu(x)/
  %4(x) = $(fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7):call @mindspore_nn_layer_pooling_MaxPool2d_construct.28(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:468/        x = self.maxpool(x)/
  %5(x) = call @mindspore_nn_layer_container_SequentialCell_construct.32(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:478/        x = self.layer1(x)/
  %6([CNode]34) = call @fastreid_modeling_backbones_meta_dynamic_router_resnet_HyperRouter_construct.33(%5, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:491/        weight, domain_cls_logit = self.router1(x, opt)/
  %7(domain_cls_logit) = S-Prim-getitem(%6, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:491/        weight, domain_cls_logit = self.router1(x, opt)/
  %8([CNode]35) = StopGradient(%7)
      : (<null>) -> (<null>)
      #scope: (Default)
  %9([CNode]36) = S-Prim-inner_len(%para3_NL_1_idx)
      : (<Ref[Tensor[Int64]], (1)>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
  %10([CNode]37) = S-Prim-equal(%9, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
  %11([CNode]38) = Cond(%10, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
  %12([CNode]39) = Switch(%11, call @✓↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.40, call @✗↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.41)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
  %13([CNode]42) = %12()
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
  %14([CNode]43) = Depend[side_effect_propagate: I64(1)](%13, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
  Return(%14)
      : (<null>)
      #scope: (Default)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/backbones/meta_dynamic_router_resnet.py:506/        if len(self.NL_2_idx) == 0:/
}
# Order:
#   1: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x{[0]: ValueNode<FuncGraph> mindspore_nn_layer_container_SequentialCell_construct.32, [1]: x}
#   2: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x_invariant{[0]: ValueNode<FuncGraph> fastreid_modeling_backbones_meta_dynamic_router_resnet_Bottleneck_construct.44, [1]: x, [2]: ValueNode<None> None}
#   3: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]45{[0]: ValueNode<Primitive> getattr, [1]: x_invariant, [2]: ValueNode<StringImm> shape}
#   4: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:N{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]45, [2]: ValueNode<Int64Imm> 0}
#   5: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:C{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]45, [2]: ValueNode<Int64Imm> 1}
#   6: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:H{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]45, [2]: ValueNode<Int64Imm> 2}
#   7: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:W{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]45, [2]: ValueNode<Int64Imm> 3}
#   8: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]46{[0]: ValueNode<Primitive> getattr, [1]: x, [2]: ValueNode<StringImm> tile}
#   9: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]47{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<Int64Imm> 1, [2]: ValueNode<Int64Imm> 4, [3]: ValueNode<Int64Imm> 1, [4]: ValueNode<Int64Imm> 1}
#  10: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]48{[0]: [CNode]46, [1]: [CNode]47}
#  11: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]49{[0]: ValueNode<FuncGraph> fastreid_modeling_backbones_meta_dynamic_router_resnet_Bottleneck2_construct.50, [1]: [CNode]48, [2]: ValueNode<None> None}
#  12: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]51{[0]: ValueNode<Primitive> getattr, [1]: [CNode]49, [2]: ValueNode<StringImm> reshape}
#  13: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x_specific{[0]: [CNode]51, [1]: N, [2]: ValueNode<Int64Imm> 4, [3]: C, [4]: H, [5]: W}
#  14: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]34{[0]: ValueNode<FuncGraph> fastreid_modeling_backbones_meta_dynamic_router_resnet_HyperRouter_construct.33, [1]: x, [2]: ValueNode<None> None}
#  15: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:weight{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]34, [2]: ValueNode<Int64Imm> 0}
#  16: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:domain_cls_logit{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]34, [2]: ValueNode<Int64Imm> 1}
#  17: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]52{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ValueList> [], [2]: ValueNode<StringImm> append}
#  18: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:weights{[0]: [CNode]52, [1]: weight}
#  19: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]53{[0]: ValueNode<Primitive> getattr, [1]: weight, [2]: ValueNode<StringImm> reshape}
#  20: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]54{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#  21: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]55{[0]: [CNode]53, [1]: [CNode]54, [2]: ValueNode<Int64Imm> 4, [3]: ValueNode<Int64Imm> 1, [4]: ValueNode<Int64Imm> 1, [5]: ValueNode<Int64Imm> 1}
#  22: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]56{[0]: ValueNode<DoSignaturePrimitive> S-Prim-mul, [1]: x_specific, [2]: [CNode]55}
#  23: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]57{[0]: ValueNode<Primitive> getattr, [1]: [CNode]56, [2]: ValueNode<StringImm> sum}
#  24: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x_specific{[0]: [CNode]57, [1]: ValueNode<Int64Imm> 1}
#  25: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x_invariant{[0]: ValueNode<FuncGraph> fastreid_modeling_ops_MetaBNNorm_construct.58, [1]: x_invariant}
#  26: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x_specific{[0]: ValueNode<FuncGraph> fastreid_modeling_ops_MetaBNNorm_construct.59, [1]: x_specific}
#  27: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x{[0]: ValueNode<FuncGraph> fastreid_modeling_ops_MetaGate_construct.60, [1]: x_invariant, [2]: x_specific, [3]: ValueNode<None> None}
#  28: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x{[0]: ValueNode<FuncGraph> fastreid_modeling_backbones_meta_dynamic_router_resnet_MetaSELayer_construct.61, [1]: x, [2]: ValueNode<None> None}
#  29: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]62{[0]: ValueNode<FuncGraph> mindspore_nn_layer_pooling_AdaptiveAvgPool2d_construct.63, [1]: x}
#  30: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:temp{[0]: ValueNode<FuncGraph> fastreid_modeling_ops_MetaBNNorm_construct.64, [1]: [CNode]62}
#  31: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]65{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<StringImm> axis}
#  32: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]66{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<Int64Imm> 1}
#  33: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]67{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_dict, [1]: [CNode]65, [2]: [CNode]66}
#  34: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:l2_normalize{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.68, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.nn_ops.L2Normalize', [2]: [CNode]67}
#  35: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:x_normalized{[0]: l2_normalize, [1]: temp}
#  36: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]69{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ValueList> [], [2]: ValueNode<StringImm> append}
#  37: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]70{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<Ellipsis> Ellipsis, [2]: ValueNode<Int64Imm> 0, [3]: ValueNode<Int64Imm> 0}
#  38: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]71{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: x_normalized, [2]: [CNode]70}
#  39: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:out_features{[0]: [CNode]69, [1]: [CNode]71}
#  40: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]36{[0]: ValueNode<DoSignaturePrimitive> S-Prim-inner_len, [1]: NL_1_idx}
#  41: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]37{[0]: ValueNode<DoSignaturePrimitive> S-Prim-equal, [1]: [CNode]36, [2]: ValueNode<Int64Imm> 0}
#  42: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]38{[0]: ValueNode<Primitive> Cond, [1]: [CNode]37, [2]: ValueNode<BoolImm> false}
#  43: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]39{[0]: ValueNode<Primitive> Switch, [1]: [CNode]38, [2]: ValueNode<FuncGraph> ✓↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.40, [3]: ValueNode<FuncGraph> ✗↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.41}
#  44: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]42{[0]: [CNode]39}
#  45: @↓fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.9:[CNode]72{[0]: ValueNode<Primitive> Return, [1]: [CNode]43}


subgraph attr:
training : 0
subgraph instance: fastreid_modeling_ops_MetaBNNorm_construct.10 : 0x558b07bc8fa0
# In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:333/    def construct(self, inputs):/
subgraph @fastreid_modeling_ops_MetaBNNorm_construct.10 parent: [subgraph @fastreid_modeling_backbones_meta_dynamic_router_resnet_ResNet_construct.7](%para437_inputs) {
  %1([CNode]73) = getattr(%para437_inputs, "dim")
      : (<Tensor[Float32], (8, 64, 8, 8)>, <String, NoShape>) -> (<Func, NoShape>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/
  %2([CNode]74) = S-Prim-not_equal(%1, I64(4))
      : (<Func, NoShape>, <Int64, NoShape>) -> (<Any(Tensor)[Float64], (-2)>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/
  %3([CNode]75) = Cond(%2, Bool(0))
      : (<Any(Tensor)[Float64], (-2)>, <Bool, NoShape>) -> (<Tensor[Bool], (-1)>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/
  %4([CNode]76) = Switch(%3, call @✓fastreid_modeling_ops_MetaBNNorm_construct.6, call @✗fastreid_modeling_ops_MetaBNNorm_construct.77)
      : (<Tensor[Bool], (-1)>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/

#------------------------> 3
  %5([CNode]78) = %4()
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/
  Return(%5)
      : (<null>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/
}
# Order:
#   1: @fastreid_modeling_ops_MetaBNNorm_construct.10:[CNode]73{[0]: ValueNode<Primitive> getattr, [1]: inputs, [2]: ValueNode<StringImm> dim}
#   2: @fastreid_modeling_ops_MetaBNNorm_construct.10:[CNode]74{[0]: ValueNode<DoSignaturePrimitive> S-Prim-not_equal, [1]: [CNode]73, [2]: ValueNode<Int64Imm> 4}
#   3: @fastreid_modeling_ops_MetaBNNorm_construct.10:[CNode]75{[0]: ValueNode<Primitive> Cond, [1]: [CNode]74, [2]: ValueNode<BoolImm> false}
#   4: @fastreid_modeling_ops_MetaBNNorm_construct.10:[CNode]76{[0]: ValueNode<Primitive> Switch, [1]: [CNode]75, [2]: ValueNode<FuncGraph> ✓fastreid_modeling_ops_MetaBNNorm_construct.6, [3]: ValueNode<FuncGraph> ✗fastreid_modeling_ops_MetaBNNorm_construct.77}
#   5: @fastreid_modeling_ops_MetaBNNorm_construct.10:[CNode]78{[0]: [CNode]76}
#   6: @fastreid_modeling_ops_MetaBNNorm_construct.10:[CNode]79{[0]: ValueNode<Primitive> Return, [1]: [CNode]78}


subgraph attr:
training : 0
subgraph instance: ✓fastreid_modeling_ops_MetaBNNorm_construct.6 : 0x558aebd380f0
# In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:334/        if inputs.dim != 4:/
subgraph @✓fastreid_modeling_ops_MetaBNNorm_construct.6 parent: [subgraph @fastreid_modeling_ops_MetaBNNorm_construct.10]() {
  %1([CNode]80) = getattr("expected 4D input (got {}D input)", "format")
      : (<String, NoShape>, <String, NoShape>) -> (<Func, NoShape>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:336/            raise ValueError('expected 4D input (got {}D input)'.format(inputs.dim))/
  %2([CNode]81) = getattr(%para437_inputs, "dim")
      : (<Tensor[Float32], (8, 64, 8, 8)>, <String, NoShape>) -> (<Func, NoShape>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:336/            raise ValueError('expected 4D input (got {}D input)'.format(inputs.dim))/

#------------------------> 4
  %3([CNode]82) = %1(%2)
      : (<Func, NoShape>) -> (<null>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:336/            raise ValueError('expected 4D input (got {}D input)'.format(inputs.dim))/
  %4([CNode]83) = raise[side_effect_io: Bool(1)]("ValueError", %3, "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:336/            raise ValueError('expected 4D input (got {}D input)'.format(inputs.dim))/
  Return(%4)
      : (<null>)
      #scope: (Default/bn1-MetaBNNorm)
      # In file /home/yuming/ACL-DGReID-mindspore/fastreid/modeling/ops.py:336/            raise ValueError('expected 4D input (got {}D input)'.format(inputs.dim))/
}
# Order:
#   1: @✓fastreid_modeling_ops_MetaBNNorm_construct.6:[CNode]80{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<StringImm> expected 4D input (got {}D input), [2]: ValueNode<StringImm> format}
#   2: @✓fastreid_modeling_ops_MetaBNNorm_construct.6:[CNode]81{[0]: ValueNode<Primitive> getattr, [1]: inputs, [2]: ValueNode<StringImm> dim}
#   3: @✓fastreid_modeling_ops_MetaBNNorm_construct.6:[CNode]82{[0]: [CNode]80, [1]: [CNode]81}
#   4: @✓fastreid_modeling_ops_MetaBNNorm_construct.6:[CNode]83{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> ValueError, [2]: [CNode]82, [3]: ValueNode<StringImm> None}
#   5: @✓fastreid_modeling_ops_MetaBNNorm_construct.6:[CNode]84{[0]: ValueNode<Primitive> Return, [1]: [CNode]83}


#===============================================================================
# num of function graphs in stack: 5
